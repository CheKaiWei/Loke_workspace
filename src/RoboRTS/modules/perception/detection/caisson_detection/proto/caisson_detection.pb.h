// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: caisson_detection.proto

#ifndef PROTOBUF_caisson_5fdetection_2eproto__INCLUDED
#define PROTOBUF_caisson_5fdetection_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_caisson_5fdetection_2eproto();
void protobuf_AssignDesc_caisson_5fdetection_2eproto();
void protobuf_ShutdownFile_caisson_5fdetection_2eproto();

class CaissonDetectionParams;

// ===================================================================

class CaissonDetectionParams : public ::google::protobuf::Message {
 public:
  CaissonDetectionParams();
  virtual ~CaissonDetectionParams();

  CaissonDetectionParams(const CaissonDetectionParams& from);

  inline CaissonDetectionParams& operator=(const CaissonDetectionParams& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CaissonDetectionParams& default_instance();

  void Swap(CaissonDetectionParams* other);

  // implements Message ----------------------------------------------

  CaissonDetectionParams* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CaissonDetectionParams& from);
  void MergeFrom(const CaissonDetectionParams& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Pcanny = 1;
  inline bool has_pcanny() const;
  inline void clear_pcanny();
  static const int kPcannyFieldNumber = 1;
  inline ::google::protobuf::int32 pcanny() const;
  inline void set_pcanny(::google::protobuf::int32 value);

  // optional float SML = 2;
  inline bool has_sml() const;
  inline void clear_sml();
  static const int kSMLFieldNumber = 2;
  inline float sml() const;
  inline void set_sml(float value);

  // optional int32 nGaussianBlurValue = 3;
  inline bool has_ngaussianblurvalue() const;
  inline void clear_ngaussianblurvalue();
  static const int kNGaussianBlurValueFieldNumber = 3;
  inline ::google::protobuf::int32 ngaussianblurvalue() const;
  inline void set_ngaussianblurvalue(::google::protobuf::int32 value);

  // optional float disThr = 4;
  inline bool has_disthr() const;
  inline void clear_disthr();
  static const int kDisThrFieldNumber = 4;
  inline float disthr() const;
  inline void set_disthr(float value);

  // optional int32 fps = 5;
  inline bool has_fps() const;
  inline void clear_fps();
  static const int kFpsFieldNumber = 5;
  inline ::google::protobuf::int32 fps() const;
  inline void set_fps(::google::protobuf::int32 value);

  // optional int32 minArea = 6;
  inline bool has_minarea() const;
  inline void clear_minarea();
  static const int kMinAreaFieldNumber = 6;
  inline ::google::protobuf::int32 minarea() const;
  inline void set_minarea(::google::protobuf::int32 value);

  // optional int32 maxArea = 7;
  inline bool has_maxarea() const;
  inline void clear_maxarea();
  static const int kMaxAreaFieldNumber = 7;
  inline ::google::protobuf::int32 maxarea() const;
  inline void set_maxarea(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CaissonDetectionParams)
 private:
  inline void set_has_pcanny();
  inline void clear_has_pcanny();
  inline void set_has_sml();
  inline void clear_has_sml();
  inline void set_has_ngaussianblurvalue();
  inline void clear_has_ngaussianblurvalue();
  inline void set_has_disthr();
  inline void clear_has_disthr();
  inline void set_has_fps();
  inline void clear_has_fps();
  inline void set_has_minarea();
  inline void clear_has_minarea();
  inline void set_has_maxarea();
  inline void clear_has_maxarea();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 pcanny_;
  float sml_;
  ::google::protobuf::int32 ngaussianblurvalue_;
  float disthr_;
  ::google::protobuf::int32 fps_;
  ::google::protobuf::int32 minarea_;
  ::google::protobuf::int32 maxarea_;
  friend void  protobuf_AddDesc_caisson_5fdetection_2eproto();
  friend void protobuf_AssignDesc_caisson_5fdetection_2eproto();
  friend void protobuf_ShutdownFile_caisson_5fdetection_2eproto();

  void InitAsDefaultInstance();
  static CaissonDetectionParams* default_instance_;
};
// ===================================================================


// ===================================================================

// CaissonDetectionParams

// optional int32 Pcanny = 1;
inline bool CaissonDetectionParams::has_pcanny() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CaissonDetectionParams::set_has_pcanny() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CaissonDetectionParams::clear_has_pcanny() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CaissonDetectionParams::clear_pcanny() {
  pcanny_ = 0;
  clear_has_pcanny();
}
inline ::google::protobuf::int32 CaissonDetectionParams::pcanny() const {
  // @@protoc_insertion_point(field_get:CaissonDetectionParams.Pcanny)
  return pcanny_;
}
inline void CaissonDetectionParams::set_pcanny(::google::protobuf::int32 value) {
  set_has_pcanny();
  pcanny_ = value;
  // @@protoc_insertion_point(field_set:CaissonDetectionParams.Pcanny)
}

// optional float SML = 2;
inline bool CaissonDetectionParams::has_sml() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CaissonDetectionParams::set_has_sml() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CaissonDetectionParams::clear_has_sml() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CaissonDetectionParams::clear_sml() {
  sml_ = 0;
  clear_has_sml();
}
inline float CaissonDetectionParams::sml() const {
  // @@protoc_insertion_point(field_get:CaissonDetectionParams.SML)
  return sml_;
}
inline void CaissonDetectionParams::set_sml(float value) {
  set_has_sml();
  sml_ = value;
  // @@protoc_insertion_point(field_set:CaissonDetectionParams.SML)
}

// optional int32 nGaussianBlurValue = 3;
inline bool CaissonDetectionParams::has_ngaussianblurvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CaissonDetectionParams::set_has_ngaussianblurvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CaissonDetectionParams::clear_has_ngaussianblurvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CaissonDetectionParams::clear_ngaussianblurvalue() {
  ngaussianblurvalue_ = 0;
  clear_has_ngaussianblurvalue();
}
inline ::google::protobuf::int32 CaissonDetectionParams::ngaussianblurvalue() const {
  // @@protoc_insertion_point(field_get:CaissonDetectionParams.nGaussianBlurValue)
  return ngaussianblurvalue_;
}
inline void CaissonDetectionParams::set_ngaussianblurvalue(::google::protobuf::int32 value) {
  set_has_ngaussianblurvalue();
  ngaussianblurvalue_ = value;
  // @@protoc_insertion_point(field_set:CaissonDetectionParams.nGaussianBlurValue)
}

// optional float disThr = 4;
inline bool CaissonDetectionParams::has_disthr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CaissonDetectionParams::set_has_disthr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CaissonDetectionParams::clear_has_disthr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CaissonDetectionParams::clear_disthr() {
  disthr_ = 0;
  clear_has_disthr();
}
inline float CaissonDetectionParams::disthr() const {
  // @@protoc_insertion_point(field_get:CaissonDetectionParams.disThr)
  return disthr_;
}
inline void CaissonDetectionParams::set_disthr(float value) {
  set_has_disthr();
  disthr_ = value;
  // @@protoc_insertion_point(field_set:CaissonDetectionParams.disThr)
}

// optional int32 fps = 5;
inline bool CaissonDetectionParams::has_fps() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CaissonDetectionParams::set_has_fps() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CaissonDetectionParams::clear_has_fps() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CaissonDetectionParams::clear_fps() {
  fps_ = 0;
  clear_has_fps();
}
inline ::google::protobuf::int32 CaissonDetectionParams::fps() const {
  // @@protoc_insertion_point(field_get:CaissonDetectionParams.fps)
  return fps_;
}
inline void CaissonDetectionParams::set_fps(::google::protobuf::int32 value) {
  set_has_fps();
  fps_ = value;
  // @@protoc_insertion_point(field_set:CaissonDetectionParams.fps)
}

// optional int32 minArea = 6;
inline bool CaissonDetectionParams::has_minarea() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CaissonDetectionParams::set_has_minarea() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CaissonDetectionParams::clear_has_minarea() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CaissonDetectionParams::clear_minarea() {
  minarea_ = 0;
  clear_has_minarea();
}
inline ::google::protobuf::int32 CaissonDetectionParams::minarea() const {
  // @@protoc_insertion_point(field_get:CaissonDetectionParams.minArea)
  return minarea_;
}
inline void CaissonDetectionParams::set_minarea(::google::protobuf::int32 value) {
  set_has_minarea();
  minarea_ = value;
  // @@protoc_insertion_point(field_set:CaissonDetectionParams.minArea)
}

// optional int32 maxArea = 7;
inline bool CaissonDetectionParams::has_maxarea() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CaissonDetectionParams::set_has_maxarea() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CaissonDetectionParams::clear_has_maxarea() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CaissonDetectionParams::clear_maxarea() {
  maxarea_ = 0;
  clear_has_maxarea();
}
inline ::google::protobuf::int32 CaissonDetectionParams::maxarea() const {
  // @@protoc_insertion_point(field_get:CaissonDetectionParams.maxArea)
  return maxarea_;
}
inline void CaissonDetectionParams::set_maxarea(::google::protobuf::int32 value) {
  set_has_maxarea();
  maxarea_ = value;
  // @@protoc_insertion_point(field_set:CaissonDetectionParams.maxArea)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_caisson_5fdetection_2eproto__INCLUDED
